import {Command,Argument,Option}from'commander';import'fs/promises';import v from'handlebars';import'path';import'tiny-glob';v.compile(`import { createWorker, QueueContainer, WorkerContainer, Job } from "..";

const {{lname}}Worker = createWorker()
    .queue("{{lname}}-queue")
    .job<Job<{}, {}>>()
    .connection({})
    .processor(async () => {
        return {};
    });

/*
AUTOGENERATED!
*/

export { {{lname}}Worker };
export type {{cname}}Worker = (typeof {{lname}}Worker)["worker"];
export type {{cname}}WorkerQueue = (typeof {{lname}}Worker)["queue"];

export function get{{cname}}Worker(deps: WorkerContainer) {
    return deps.get<{{cname}}Worker>({{lname}}Worker.queueName);
}
export function get{{cname}}WorkerQueue(deps: QueueContainer) {
    return deps.get<{{cname}}WorkerQueue>({{lname}}Worker.queueName);
}
`);v.compile(`import { createController } from "..";

const {{lname}}Controller = createController()
    .rootPath("/{{lname}}")

/*
AUTOGENERATED!
*/

export { {{lname}}Controller };
`);v.compile(`
import {
  createService,
  InferService,
  ServiceContainer,
} from "..";

const {{lname}}Service = createService("{{lname}}", async () => {
    // Your code here...
});

export { {{lname}}Service };
export type {{cname}}Service = InferService<typeof {{lname}}Service>;
export function get{{cname}}Service(deps: ServiceContainer) {
    return deps.get<{{cname}}Service>({{lname}}Service.name);
}
`);var y=new Command;y.name("fastify-toa").description("CLI to create services, workers and controllers easily.").version("0.0.1");y.command("create").description("create a component").addArgument(new Argument("<component>","component to create").choices(["service","controller","worker"])).addArgument(new Argument("<nameOrParent>","component name or worker parent")).addArgument(new Argument("<workerName>","worker name").argOptional()).addOption(new Option("-w, --workdir <path>","workdir to operate in is src at default.")).action(async(r,o,a,p)=>{throw console.log({wd:p}),new Error;});y.parse();//# sourceMappingURL=generate.js.map
//# sourceMappingURL=generate.js.map